// Get the canvas element
const canvas = document.getElementById('canvas');
const ctx = canvas.getContext('2d');

// Set the canvas dimensions
canvas.width = 800;
canvas.height = 600;

// Define the player car
class Car {
  constructor(x, y) {
    this.position = { x, y };
    this.velocity = { x: 0, y: 0 };
    this.acceleration = { x: 0, y: 0 };
    this.friction = 0.98; // Friction coefficient
    this.maxSpeed = 5; // Maximum speed
  }

  update() {
    // Update velocity based on acceleration
    this.velocity.x += this.acceleration.x;
    this.velocity.y += this.acceleration.y;

    // Apply friction
    this.velocity.x *= this.friction;
    this.velocity.y *= this.friction;

    // Limit speed
    const speed = Math.sqrt(this.velocity.x ** 2 + this.velocity.y ** 2);
    if (speed > this.maxSpeed) {
      this.velocity.x = (this.velocity.x / speed) * this.maxSpeed;
      this.velocity.y = (this.velocity.y / speed) * this.maxSpeed;
    }

    // Update position based on velocity
    this.position.x += this.velocity.x;
    this.position.y += this.velocity.y;
  }

  draw() {
    ctx.fillStyle = 'red';
    ctx.fillRect(this.position.x, this.position.y, 50, 50);
  }
}

// Create a new car instance
const car = new Car(100, 100);

// Handle keyboard input
document.addEventListener('keydown', (e) => {
  switch (e.key) {
    case 'ArrowUp':
    case 'w':
      car.acceleration.y = -0.1;
      break;
    case 'ArrowDown':
    case 's':
      car.acceleration.y = 0.1;
      break;
    case 'ArrowLeft':
    case 'a':
      car.acceleration.x = -0.1;
      break;
    case 'ArrowRight':
    case 'd':
      car.acceleration.x = 0.1;
      break;
  }
});

document.addEventListener('keyup', (e) => {
  switch (e.key) {
    case 'ArrowUp':
    case 'w':
    case 'ArrowDown':
    case 's':
      car.acceleration.y = 0;
      break;
    case 'ArrowLeft':
    case 'a':
    case 'ArrowRight':
    case 'd':
      car.acceleration.x = 0;
      break;
  }
});

// Main game loop
function update() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  car.update();
  car.draw();
  requestAnimationFrame(update);
}

update();
